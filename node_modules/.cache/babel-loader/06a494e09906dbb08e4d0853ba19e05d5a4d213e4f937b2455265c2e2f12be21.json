{"ast":null,"code":"var _jsxFileName = \"/Users/chungtran/Programming/guitar-chords/web/src/components/MainWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, Typography, Button, Card, CardContent, List, ListItem, ListItemText, ListItemButton } from '@mui/material';\nimport { MicRounded, FavoriteRounded, HistoryRounded } from '@mui/icons-material';\nimport { apiService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainWindow = () => {\n  _s();\n  const navigate = useNavigate();\n  const [recentSongs, setRecentSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadRecentSongs = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const songs = await apiService.getRecentSongs(3);\n        setRecentSongs(songs || []);\n      } catch (err) {\n        console.error('Failed to load recent songs:', err);\n        setError('Không thể tải danh sách bài hát gần đây');\n        // Fallback to mock data\n        setRecentSongs([{\n          id: 1,\n          title: 'Mưa Phi Trường',\n          artist: {\n            id: 1,\n            name: 'Hoàng Dũng'\n          },\n          lyrics: '',\n          tempo: 80,\n          difficulty: 'BEGINNER',\n          playCount: 0,\n          chords: []\n        }]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadRecentSongs();\n  }, []);\n  const handleFamiliarSongs = () => {\n    if (recentSongs && recentSongs.length > 0) {\n      const randomSong = recentSongs[Math.floor(Math.random() * recentSongs.length)];\n      if (randomSong !== null && randomSong !== void 0 && randomSong.id) {\n        navigate(`/player/${randomSong.id}`);\n      }\n    } else {\n      navigate('/search');\n    }\n  };\n  const handleVoiceSearch = () => {\n    navigate('/search');\n  };\n  const handleSongSelect = songId => {\n    if (songId) {\n      navigate(`/player/${songId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      gap: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        children: \"Guitar Chords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        textAlign: \"center\",\n        children: \"\\u1EE8ng d\\u1EE5ng h\\u1ED7 tr\\u1EE3 \\u0111\\u1EC7m h\\xE1t guitar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 3,\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          startIcon: /*#__PURE__*/_jsxDEV(FavoriteRounded, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }, this),\n          onClick: handleFamiliarSongs,\n          sx: {\n            py: 2,\n            fontSize: '1.1rem'\n          },\n          children: \"Quen thu\\u1ED9c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          startIcon: /*#__PURE__*/_jsxDEV(MicRounded, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 24\n          }, this),\n          onClick: handleVoiceSearch,\n          sx: {\n            py: 2,\n            fontSize: '1.1rem'\n          },\n          color: \"secondary\",\n          children: \"T\\xECm ki\\u1EBFm b\\u1EB1ng gi\\u1ECDng n\\xF3i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(HistoryRounded, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), \"B\\xE0i g\\u1EA7n nh\\u1EA5t\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            disablePadding: true,\n            children: recentSongs.map(song => /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                onClick: () => handleSongSelect(song.id),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: song.title,\n                  secondary: `${song.artist} • ${song.chords.join(' - ')}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, song.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MainWindow, \"h4zqxfU2sZdlFpTm59DpxUZJJWE=\", false, function () {\n  return [useNavigate];\n});\n_c = MainWindow;\nexport default MainWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWindow\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Box","Typography","Button","Card","CardContent","List","ListItem","ListItemText","ListItemButton","MicRounded","FavoriteRounded","HistoryRounded","apiService","jsxDEV","_jsxDEV","MainWindow","_s","navigate","recentSongs","setRecentSongs","loading","setLoading","error","setError","loadRecentSongs","songs","getRecentSongs","err","console","id","title","artist","name","lyrics","tempo","difficulty","playCount","chords","handleFamiliarSongs","length","randomSong","Math","floor","random","handleVoiceSearch","handleSongSelect","songId","maxWidth","sx","py","children","display","flexDirection","alignItems","gap","variant","component","gutterBottom","textAlign","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","width","size","startIcon","onClick","fontSize","mt","disablePadding","map","song","primary","secondary","join","_c","$RefreshReg$"],"sources":["/Users/chungtran/Programming/guitar-chords/web/src/components/MainWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\nimport {\n  MicRounded,\n  FavoriteRounded,\n  HistoryRounded,\n} from '@mui/icons-material';\nimport { apiService, Song } from '../services/api';\n\nconst MainWindow: React.FC = () => {\n  const navigate = useNavigate();\n  const [recentSongs, setRecentSongs] = useState<Song[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadRecentSongs = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const songs = await apiService.getRecentSongs(3);\n        setRecentSongs(songs || []);\n      } catch (err) {\n        console.error('Failed to load recent songs:', err);\n        setError('Không thể tải danh sách bài hát gần đây');\n        // Fallback to mock data\n        setRecentSongs([\n          { \n            id: 1, \n            title: 'Mưa Phi Trường', \n            artist: { id: 1, name: 'Hoàng Dũng' }, \n            lyrics: '',\n            tempo: 80,\n            difficulty: 'BEGINNER',\n            playCount: 0,\n            chords: []\n          }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadRecentSongs();\n  }, []);\n\n  const handleFamiliarSongs = () => {\n    if (recentSongs && recentSongs.length > 0) {\n      const randomSong = recentSongs[Math.floor(Math.random() * recentSongs.length)];\n      if (randomSong?.id) {\n        navigate(`/player/${randomSong.id}`);\n      }\n    } else {\n      navigate('/search');\n    }\n  };\n\n  const handleVoiceSearch = () => {\n    navigate('/search');\n  };\n\n  const handleSongSelect = (songId: number) => {\n    if (songId) {\n      navigate(`/player/${songId}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gap={4}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom textAlign=\"center\" fontWeight=\"bold\">\n          Guitar Chords\n        </Typography>\n        \n        <Typography variant=\"h6\" color=\"text.secondary\" textAlign=\"center\">\n          Ứng dụng hỗ trợ đệm hát guitar\n        </Typography>\n\n        <Box display=\"flex\" flexDirection=\"column\" gap={3} width=\"100%\">\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            startIcon={<FavoriteRounded />}\n            onClick={handleFamiliarSongs}\n            sx={{ py: 2, fontSize: '1.1rem' }}\n          >\n            Quen thuộc\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            startIcon={<MicRounded />}\n            onClick={handleVoiceSearch}\n            sx={{ py: 2, fontSize: '1.1rem' }}\n            color=\"secondary\"\n          >\n            Tìm kiếm bằng giọng nói\n          </Button>\n        </Box>\n\n        <Card sx={{ width: '100%', mt: 2 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <HistoryRounded />\n              Bài gần nhất\n            </Typography>\n            <List disablePadding>\n              {recentSongs.map((song) => (\n                <ListItem key={song.id} disablePadding>\n                  <ListItemButton onClick={() => handleSongSelect(song.id)}>\n                    <ListItemText\n                      primary={song.title}\n                      secondary={`${song.artist} • ${song.chords.join(' - ')}`}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </Container>\n  );\n};\n\nexport default MainWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}